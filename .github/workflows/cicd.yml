name: Packer and Terraform Provision

on:
  push:
    branches:
      - ganga
  workflow_dispatch:

jobs:
  provision-packer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Packer
        id: setup
        uses: hashicorp/setup-packer@main

      - name: Initialize Packer
        id: initpacker
        run: packer init ./devops/packer/

      - name: Format Packer
        id: fmtpacker
        run: packer fmt ./devops/packer/

      - name: Validate Packer
        id: validate
        run: packer validate -var "region=${{ secrets.REGION }}" -var "source_ami=${{ secrets.SOURCE_AMI }}" -var "access_key=${{ secrets.AWS_ACCESS_KEY }}" -var "secret_key=${{ secrets.AWS_SECRET_KEY }}" -var "instance_type=${{ secrets.INSTANCE_TYPE }}" -var "ssh_user=${{ secrets.SSH_USER }}" -var "project_name=${{ secrets.PROJECT_NAME }}" -var "ansible_playbook_file_syspackages=${{ secrets.ANSIBLE_SYS_PACKAGES }}" -var "ansible_playbook_file_clonerepo=${{ secrets.ANSIBLE_CLONE_REPO }}" -var "private_key_str=${{ secrets.PRIVATE_KEY_STR }}" -var "repo_url=${{ secrets.REPO_URL }}" -var "target_directory=${{ secrets.TARGET_DIRECTORY }}" -var "remote_env_path=${{ secrets.REMOTE_ENV_PATH }}" -var "remote_env_file=${{ secrets.REMOTE_ENV_FILE }}" -var "remote_key_path=${{ secrets.REMOTE_KEY_PATH }}" -var "private_key=${{ secrets.PRIVATE_KEY }}" ./devops/packer/


      - name: Build Image
        id: build
        run: packer build -var "region=${{ secrets.REGION }}" -var "source_ami=${{ secrets.SOURCE_AMI }}" -var "access_key=${{ secrets.AWS_ACCESS_KEY }}" -var "secret_key=${{ secrets.AWS_SECRET_KEY }}" -var "instance_type=${{ secrets.INSTANCE_TYPE }}" -var "ssh_user=${{ secrets.SSH_USER }}" -var "project_name=${{ secrets.PROJECT_NAME }}" -var "ansible_playbook_file_syspackages=${{ secrets.ANSIBLE_SYS_PACKAGES }}" -var "ansible_playbook_file_clonerepo=${{ secrets.ANSIBLE_CLONE_REPO }}" -var "private_key_str=${{ secrets.PRIVATE_KEY_STR }}" -var "repo_url=${{ secrets.REPO_URL }}" -var "target_directory=${{ secrets.TARGET_DIRECTORY }}" -var "remote_env_path=${{ secrets.REMOTE_ENV_PATH }}" -var "remote_env_file=${{ secrets.REMOTE_ENV_FILE }}" -var "remote_key_path=${{ secrets.REMOTE_KEY_PATH }}" -var "private_key=${{ secrets.PRIVATE_KEY }}" ./devops/packer/

  provision-terraform:
    runs-on: ubuntu-latest
    needs: provision-packer
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_key }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        id: setupterraform

      - name: Terraform Init
        id: initailizeterraform
        run: terraform init -migrate-state
        working-directory: ./devops/terraform/

      - name: Format Terraform
        id: formatterraform
        run: terraform fmt
        working-directory: ./devops/terraform/

      - name: Validate Terraform
        id: validateterraform
        run: terraform validate
        working-directory: ./devops/terraform/

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false
        working-directory: ./devops/terraform/

      - name: Terraform Apply
        id: apply
        run: terraform destroy --auto-approve
        working-directory: ./devops/terraform/